#program 7
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import sklearn.metrics as sm
from sklearn import datasets 
from sklearn.cluster import KMeans

iris=datasets.load_iris()
x=pd.DataFrame(iris.data)
x.columns=['Sepal_Length','Sepal_Width','Petal_Length','Petal_Width']
y=pd.DataFrame(iris.target)
y.columns=['Targets']

model=KMeans(n_clusters=3)
model.fit(x)

plt.figure(figsize=(14,7))
colormap=np.array(['red','lime','black'])

plt.subplot(1,3,1)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[y.Targets],s=40)
plt.title('Real cluster')

plt.subplot(1,3,2)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[model.labels_],s=40)
plt.title('KKmean cluster')
print('K mean CLustering accuracy\n',sm.accuracy_score(y,model.labels_))
print('\nK mean Confusion accuracy',sm.confusion_matrix(y,model.labels_))

from sklearn import preprocessing
scaler=preprocessing.StandardScaler()
classifier=scaler.fit(x)
xsa=scaler.transform(x)
xs=pd.DataFrame(xsa,columns=x.columns)
from sklearn.mixture import GaussianMixture
gmn=GaussianMixture(n_components=3)
gmn.fit(xs)
y_cluster_gmn=gmn.predict(xs)
plt.subplot(1,3,3)
plt.scatter(x.Petal_Length,x.Petal_Width,c=colormap[y_cluster_gmn],s=40)
plt.title('GMM Clustering ')

print('GMM Ckustering Accuracy',sm.accuracy_score(y,y_cluster_gmn))
print('confusion matrix',sm.confusion_matrix(y,y_cluster_gmn))
